// Code generated by ent, DO NOT EDIT.

package orderrow

import (
	"product-server/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldID, id))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldOrderID, v))
}

// Sku applies equality check predicate on the "sku" field. It's identical to SkuEQ.
func Sku(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldSku, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldSize, v))
}

// Quantity applies equality check predicate on the "quantity" field. It's identical to QuantityEQ.
func Quantity(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldQuantity, v))
}

// DeliveryStatus applies equality check predicate on the "delivery_status" field. It's identical to DeliveryStatusEQ.
func DeliveryStatus(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryStatus, v))
}

// DeliveryCompany applies equality check predicate on the "delivery_company" field. It's identical to DeliveryCompanyEQ.
func DeliveryCompany(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryCompany, v))
}

// DeliveryNumber applies equality check predicate on the "delivery_number" field. It's identical to DeliveryNumberEQ.
func DeliveryNumber(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryNumber, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldOrderID, v))
}

// OrderIDContains applies the Contains predicate on the "order_id" field.
func OrderIDContains(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContains(FieldOrderID, v))
}

// OrderIDHasPrefix applies the HasPrefix predicate on the "order_id" field.
func OrderIDHasPrefix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasPrefix(FieldOrderID, v))
}

// OrderIDHasSuffix applies the HasSuffix predicate on the "order_id" field.
func OrderIDHasSuffix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasSuffix(FieldOrderID, v))
}

// OrderIDIsNil applies the IsNil predicate on the "order_id" field.
func OrderIDIsNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIsNull(FieldOrderID))
}

// OrderIDNotNil applies the NotNil predicate on the "order_id" field.
func OrderIDNotNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotNull(FieldOrderID))
}

// OrderIDEqualFold applies the EqualFold predicate on the "order_id" field.
func OrderIDEqualFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEqualFold(FieldOrderID, v))
}

// OrderIDContainsFold applies the ContainsFold predicate on the "order_id" field.
func OrderIDContainsFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContainsFold(FieldOrderID, v))
}

// SkuEQ applies the EQ predicate on the "sku" field.
func SkuEQ(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldSku, v))
}

// SkuNEQ applies the NEQ predicate on the "sku" field.
func SkuNEQ(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldSku, v))
}

// SkuIn applies the In predicate on the "sku" field.
func SkuIn(vs ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldSku, vs...))
}

// SkuNotIn applies the NotIn predicate on the "sku" field.
func SkuNotIn(vs ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldSku, vs...))
}

// SkuIsNil applies the IsNil predicate on the "sku" field.
func SkuIsNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIsNull(FieldSku))
}

// SkuNotNil applies the NotNil predicate on the "sku" field.
func SkuNotNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotNull(FieldSku))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldSize, v))
}

// SizeContains applies the Contains predicate on the "size" field.
func SizeContains(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContains(FieldSize, v))
}

// SizeHasPrefix applies the HasPrefix predicate on the "size" field.
func SizeHasPrefix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasPrefix(FieldSize, v))
}

// SizeHasSuffix applies the HasSuffix predicate on the "size" field.
func SizeHasSuffix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasSuffix(FieldSize, v))
}

// SizeEqualFold applies the EqualFold predicate on the "size" field.
func SizeEqualFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEqualFold(FieldSize, v))
}

// SizeContainsFold applies the ContainsFold predicate on the "size" field.
func SizeContainsFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContainsFold(FieldSize, v))
}

// QuantityEQ applies the EQ predicate on the "quantity" field.
func QuantityEQ(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldQuantity, v))
}

// QuantityNEQ applies the NEQ predicate on the "quantity" field.
func QuantityNEQ(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldQuantity, v))
}

// QuantityIn applies the In predicate on the "quantity" field.
func QuantityIn(vs ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldQuantity, vs...))
}

// QuantityNotIn applies the NotIn predicate on the "quantity" field.
func QuantityNotIn(vs ...int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldQuantity, vs...))
}

// QuantityGT applies the GT predicate on the "quantity" field.
func QuantityGT(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldQuantity, v))
}

// QuantityGTE applies the GTE predicate on the "quantity" field.
func QuantityGTE(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldQuantity, v))
}

// QuantityLT applies the LT predicate on the "quantity" field.
func QuantityLT(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldQuantity, v))
}

// QuantityLTE applies the LTE predicate on the "quantity" field.
func QuantityLTE(v int32) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldQuantity, v))
}

// DeliveryStatusEQ applies the EQ predicate on the "delivery_status" field.
func DeliveryStatusEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryStatus, v))
}

// DeliveryStatusNEQ applies the NEQ predicate on the "delivery_status" field.
func DeliveryStatusNEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldDeliveryStatus, v))
}

// DeliveryStatusIn applies the In predicate on the "delivery_status" field.
func DeliveryStatusIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldDeliveryStatus, vs...))
}

// DeliveryStatusNotIn applies the NotIn predicate on the "delivery_status" field.
func DeliveryStatusNotIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldDeliveryStatus, vs...))
}

// DeliveryStatusGT applies the GT predicate on the "delivery_status" field.
func DeliveryStatusGT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldDeliveryStatus, v))
}

// DeliveryStatusGTE applies the GTE predicate on the "delivery_status" field.
func DeliveryStatusGTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldDeliveryStatus, v))
}

// DeliveryStatusLT applies the LT predicate on the "delivery_status" field.
func DeliveryStatusLT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldDeliveryStatus, v))
}

// DeliveryStatusLTE applies the LTE predicate on the "delivery_status" field.
func DeliveryStatusLTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldDeliveryStatus, v))
}

// DeliveryStatusContains applies the Contains predicate on the "delivery_status" field.
func DeliveryStatusContains(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContains(FieldDeliveryStatus, v))
}

// DeliveryStatusHasPrefix applies the HasPrefix predicate on the "delivery_status" field.
func DeliveryStatusHasPrefix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasPrefix(FieldDeliveryStatus, v))
}

// DeliveryStatusHasSuffix applies the HasSuffix predicate on the "delivery_status" field.
func DeliveryStatusHasSuffix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasSuffix(FieldDeliveryStatus, v))
}

// DeliveryStatusEqualFold applies the EqualFold predicate on the "delivery_status" field.
func DeliveryStatusEqualFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEqualFold(FieldDeliveryStatus, v))
}

// DeliveryStatusContainsFold applies the ContainsFold predicate on the "delivery_status" field.
func DeliveryStatusContainsFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContainsFold(FieldDeliveryStatus, v))
}

// DeliveryCompanyEQ applies the EQ predicate on the "delivery_company" field.
func DeliveryCompanyEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryCompany, v))
}

// DeliveryCompanyNEQ applies the NEQ predicate on the "delivery_company" field.
func DeliveryCompanyNEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldDeliveryCompany, v))
}

// DeliveryCompanyIn applies the In predicate on the "delivery_company" field.
func DeliveryCompanyIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldDeliveryCompany, vs...))
}

// DeliveryCompanyNotIn applies the NotIn predicate on the "delivery_company" field.
func DeliveryCompanyNotIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldDeliveryCompany, vs...))
}

// DeliveryCompanyGT applies the GT predicate on the "delivery_company" field.
func DeliveryCompanyGT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldDeliveryCompany, v))
}

// DeliveryCompanyGTE applies the GTE predicate on the "delivery_company" field.
func DeliveryCompanyGTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldDeliveryCompany, v))
}

// DeliveryCompanyLT applies the LT predicate on the "delivery_company" field.
func DeliveryCompanyLT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldDeliveryCompany, v))
}

// DeliveryCompanyLTE applies the LTE predicate on the "delivery_company" field.
func DeliveryCompanyLTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldDeliveryCompany, v))
}

// DeliveryCompanyContains applies the Contains predicate on the "delivery_company" field.
func DeliveryCompanyContains(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContains(FieldDeliveryCompany, v))
}

// DeliveryCompanyHasPrefix applies the HasPrefix predicate on the "delivery_company" field.
func DeliveryCompanyHasPrefix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasPrefix(FieldDeliveryCompany, v))
}

// DeliveryCompanyHasSuffix applies the HasSuffix predicate on the "delivery_company" field.
func DeliveryCompanyHasSuffix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasSuffix(FieldDeliveryCompany, v))
}

// DeliveryCompanyIsNil applies the IsNil predicate on the "delivery_company" field.
func DeliveryCompanyIsNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIsNull(FieldDeliveryCompany))
}

// DeliveryCompanyNotNil applies the NotNil predicate on the "delivery_company" field.
func DeliveryCompanyNotNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotNull(FieldDeliveryCompany))
}

// DeliveryCompanyEqualFold applies the EqualFold predicate on the "delivery_company" field.
func DeliveryCompanyEqualFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEqualFold(FieldDeliveryCompany, v))
}

// DeliveryCompanyContainsFold applies the ContainsFold predicate on the "delivery_company" field.
func DeliveryCompanyContainsFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContainsFold(FieldDeliveryCompany, v))
}

// DeliveryNumberEQ applies the EQ predicate on the "delivery_number" field.
func DeliveryNumberEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEQ(FieldDeliveryNumber, v))
}

// DeliveryNumberNEQ applies the NEQ predicate on the "delivery_number" field.
func DeliveryNumberNEQ(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNEQ(FieldDeliveryNumber, v))
}

// DeliveryNumberIn applies the In predicate on the "delivery_number" field.
func DeliveryNumberIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIn(FieldDeliveryNumber, vs...))
}

// DeliveryNumberNotIn applies the NotIn predicate on the "delivery_number" field.
func DeliveryNumberNotIn(vs ...string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotIn(FieldDeliveryNumber, vs...))
}

// DeliveryNumberGT applies the GT predicate on the "delivery_number" field.
func DeliveryNumberGT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGT(FieldDeliveryNumber, v))
}

// DeliveryNumberGTE applies the GTE predicate on the "delivery_number" field.
func DeliveryNumberGTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldGTE(FieldDeliveryNumber, v))
}

// DeliveryNumberLT applies the LT predicate on the "delivery_number" field.
func DeliveryNumberLT(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLT(FieldDeliveryNumber, v))
}

// DeliveryNumberLTE applies the LTE predicate on the "delivery_number" field.
func DeliveryNumberLTE(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldLTE(FieldDeliveryNumber, v))
}

// DeliveryNumberContains applies the Contains predicate on the "delivery_number" field.
func DeliveryNumberContains(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContains(FieldDeliveryNumber, v))
}

// DeliveryNumberHasPrefix applies the HasPrefix predicate on the "delivery_number" field.
func DeliveryNumberHasPrefix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasPrefix(FieldDeliveryNumber, v))
}

// DeliveryNumberHasSuffix applies the HasSuffix predicate on the "delivery_number" field.
func DeliveryNumberHasSuffix(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldHasSuffix(FieldDeliveryNumber, v))
}

// DeliveryNumberIsNil applies the IsNil predicate on the "delivery_number" field.
func DeliveryNumberIsNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldIsNull(FieldDeliveryNumber))
}

// DeliveryNumberNotNil applies the NotNil predicate on the "delivery_number" field.
func DeliveryNumberNotNil() predicate.OrderRow {
	return predicate.OrderRow(sql.FieldNotNull(FieldDeliveryNumber))
}

// DeliveryNumberEqualFold applies the EqualFold predicate on the "delivery_number" field.
func DeliveryNumberEqualFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldEqualFold(FieldDeliveryNumber, v))
}

// DeliveryNumberContainsFold applies the ContainsFold predicate on the "delivery_number" field.
func DeliveryNumberContainsFold(v string) predicate.OrderRow {
	return predicate.OrderRow(sql.FieldContainsFold(FieldDeliveryNumber, v))
}

// HasOrderHistory applies the HasEdge predicate on the "order_history" edge.
func HasOrderHistory() predicate.OrderRow {
	return predicate.OrderRow(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OrderHistoryTable, OrderHistoryColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrderHistoryWith applies the HasEdge predicate on the "order_history" edge with a given conditions (other predicates).
func HasOrderHistoryWith(preds ...predicate.OrderHistory) predicate.OrderRow {
	return predicate.OrderRow(func(s *sql.Selector) {
		step := newOrderHistoryStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasProductInfo applies the HasEdge predicate on the "product_info" edge.
func HasProductInfo() predicate.OrderRow {
	return predicate.OrderRow(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProductInfoTable, ProductInfoColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProductInfoWith applies the HasEdge predicate on the "product_info" edge with a given conditions (other predicates).
func HasProductInfoWith(preds ...predicate.ProductInfo) predicate.OrderRow {
	return predicate.OrderRow(func(s *sql.Selector) {
		step := newProductInfoStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderRow) predicate.OrderRow {
	return predicate.OrderRow(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderRow) predicate.OrderRow {
	return predicate.OrderRow(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderRow) predicate.OrderRow {
	return predicate.OrderRow(sql.NotPredicates(p))
}
