// Code generated by ent, DO NOT EDIT.

package orderhistory

import (
	"product-server/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldUserID, v))
}

// AddressID applies equality check predicate on the "address_id" field. It's identical to AddressIDEQ.
func AddressID(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldAddressID, v))
}

// OrderedAt applies equality check predicate on the "ordered_at" field. It's identical to OrderedAtEQ.
func OrderedAt(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderedAt, v))
}

// UserOrderNumber applies equality check predicate on the "user_order_number" field. It's identical to UserOrderNumberEQ.
func UserOrderNumber(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldUserOrderNumber, v))
}

// OrderStatus applies equality check predicate on the "order_status" field. It's identical to OrderStatusEQ.
func OrderStatus(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderStatus, v))
}

// OrderTotalPrice applies equality check predicate on the "order_total_price" field. It's identical to OrderTotalPriceEQ.
func OrderTotalPrice(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderTotalPrice, v))
}

// PaymentMethod applies equality check predicate on the "payment_method" field. It's identical to PaymentMethodEQ.
func PaymentMethod(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentMethod, v))
}

// PaymentStatus applies equality check predicate on the "payment_status" field. It's identical to PaymentStatusEQ.
func PaymentStatus(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentStatus, v))
}

// PaymentInfo applies equality check predicate on the "payment_info" field. It's identical to PaymentInfoEQ.
func PaymentInfo(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentInfo, v))
}

// PaymentKey applies equality check predicate on the "payment_key" field. It's identical to PaymentKeyEQ.
func PaymentKey(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentKey, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldUserID, v))
}

// AddressIDEQ applies the EQ predicate on the "address_id" field.
func AddressIDEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldAddressID, v))
}

// AddressIDNEQ applies the NEQ predicate on the "address_id" field.
func AddressIDNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldAddressID, v))
}

// AddressIDIn applies the In predicate on the "address_id" field.
func AddressIDIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldAddressID, vs...))
}

// AddressIDNotIn applies the NotIn predicate on the "address_id" field.
func AddressIDNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldAddressID, vs...))
}

// AddressIDGT applies the GT predicate on the "address_id" field.
func AddressIDGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldAddressID, v))
}

// AddressIDGTE applies the GTE predicate on the "address_id" field.
func AddressIDGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldAddressID, v))
}

// AddressIDLT applies the LT predicate on the "address_id" field.
func AddressIDLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldAddressID, v))
}

// AddressIDLTE applies the LTE predicate on the "address_id" field.
func AddressIDLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldAddressID, v))
}

// AddressIDContains applies the Contains predicate on the "address_id" field.
func AddressIDContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldAddressID, v))
}

// AddressIDHasPrefix applies the HasPrefix predicate on the "address_id" field.
func AddressIDHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldAddressID, v))
}

// AddressIDHasSuffix applies the HasSuffix predicate on the "address_id" field.
func AddressIDHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldAddressID, v))
}

// AddressIDIsNil applies the IsNil predicate on the "address_id" field.
func AddressIDIsNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIsNull(FieldAddressID))
}

// AddressIDNotNil applies the NotNil predicate on the "address_id" field.
func AddressIDNotNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotNull(FieldAddressID))
}

// AddressIDEqualFold applies the EqualFold predicate on the "address_id" field.
func AddressIDEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldAddressID, v))
}

// AddressIDContainsFold applies the ContainsFold predicate on the "address_id" field.
func AddressIDContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldAddressID, v))
}

// OrderedAtEQ applies the EQ predicate on the "ordered_at" field.
func OrderedAtEQ(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderedAt, v))
}

// OrderedAtNEQ applies the NEQ predicate on the "ordered_at" field.
func OrderedAtNEQ(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldOrderedAt, v))
}

// OrderedAtIn applies the In predicate on the "ordered_at" field.
func OrderedAtIn(vs ...time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldOrderedAt, vs...))
}

// OrderedAtNotIn applies the NotIn predicate on the "ordered_at" field.
func OrderedAtNotIn(vs ...time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldOrderedAt, vs...))
}

// OrderedAtGT applies the GT predicate on the "ordered_at" field.
func OrderedAtGT(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldOrderedAt, v))
}

// OrderedAtGTE applies the GTE predicate on the "ordered_at" field.
func OrderedAtGTE(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldOrderedAt, v))
}

// OrderedAtLT applies the LT predicate on the "ordered_at" field.
func OrderedAtLT(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldOrderedAt, v))
}

// OrderedAtLTE applies the LTE predicate on the "ordered_at" field.
func OrderedAtLTE(v time.Time) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldOrderedAt, v))
}

// UserOrderNumberEQ applies the EQ predicate on the "user_order_number" field.
func UserOrderNumberEQ(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldUserOrderNumber, v))
}

// UserOrderNumberNEQ applies the NEQ predicate on the "user_order_number" field.
func UserOrderNumberNEQ(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldUserOrderNumber, v))
}

// UserOrderNumberIn applies the In predicate on the "user_order_number" field.
func UserOrderNumberIn(vs ...int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldUserOrderNumber, vs...))
}

// UserOrderNumberNotIn applies the NotIn predicate on the "user_order_number" field.
func UserOrderNumberNotIn(vs ...int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldUserOrderNumber, vs...))
}

// UserOrderNumberGT applies the GT predicate on the "user_order_number" field.
func UserOrderNumberGT(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldUserOrderNumber, v))
}

// UserOrderNumberGTE applies the GTE predicate on the "user_order_number" field.
func UserOrderNumberGTE(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldUserOrderNumber, v))
}

// UserOrderNumberLT applies the LT predicate on the "user_order_number" field.
func UserOrderNumberLT(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldUserOrderNumber, v))
}

// UserOrderNumberLTE applies the LTE predicate on the "user_order_number" field.
func UserOrderNumberLTE(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldUserOrderNumber, v))
}

// OrderStatusEQ applies the EQ predicate on the "order_status" field.
func OrderStatusEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderStatus, v))
}

// OrderStatusNEQ applies the NEQ predicate on the "order_status" field.
func OrderStatusNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldOrderStatus, v))
}

// OrderStatusIn applies the In predicate on the "order_status" field.
func OrderStatusIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldOrderStatus, vs...))
}

// OrderStatusNotIn applies the NotIn predicate on the "order_status" field.
func OrderStatusNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldOrderStatus, vs...))
}

// OrderStatusGT applies the GT predicate on the "order_status" field.
func OrderStatusGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldOrderStatus, v))
}

// OrderStatusGTE applies the GTE predicate on the "order_status" field.
func OrderStatusGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldOrderStatus, v))
}

// OrderStatusLT applies the LT predicate on the "order_status" field.
func OrderStatusLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldOrderStatus, v))
}

// OrderStatusLTE applies the LTE predicate on the "order_status" field.
func OrderStatusLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldOrderStatus, v))
}

// OrderStatusContains applies the Contains predicate on the "order_status" field.
func OrderStatusContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldOrderStatus, v))
}

// OrderStatusHasPrefix applies the HasPrefix predicate on the "order_status" field.
func OrderStatusHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldOrderStatus, v))
}

// OrderStatusHasSuffix applies the HasSuffix predicate on the "order_status" field.
func OrderStatusHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldOrderStatus, v))
}

// OrderStatusEqualFold applies the EqualFold predicate on the "order_status" field.
func OrderStatusEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldOrderStatus, v))
}

// OrderStatusContainsFold applies the ContainsFold predicate on the "order_status" field.
func OrderStatusContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldOrderStatus, v))
}

// OrderTotalPriceEQ applies the EQ predicate on the "order_total_price" field.
func OrderTotalPriceEQ(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldOrderTotalPrice, v))
}

// OrderTotalPriceNEQ applies the NEQ predicate on the "order_total_price" field.
func OrderTotalPriceNEQ(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldOrderTotalPrice, v))
}

// OrderTotalPriceIn applies the In predicate on the "order_total_price" field.
func OrderTotalPriceIn(vs ...int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldOrderTotalPrice, vs...))
}

// OrderTotalPriceNotIn applies the NotIn predicate on the "order_total_price" field.
func OrderTotalPriceNotIn(vs ...int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldOrderTotalPrice, vs...))
}

// OrderTotalPriceGT applies the GT predicate on the "order_total_price" field.
func OrderTotalPriceGT(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldOrderTotalPrice, v))
}

// OrderTotalPriceGTE applies the GTE predicate on the "order_total_price" field.
func OrderTotalPriceGTE(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldOrderTotalPrice, v))
}

// OrderTotalPriceLT applies the LT predicate on the "order_total_price" field.
func OrderTotalPriceLT(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldOrderTotalPrice, v))
}

// OrderTotalPriceLTE applies the LTE predicate on the "order_total_price" field.
func OrderTotalPriceLTE(v int32) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldOrderTotalPrice, v))
}

// PaymentMethodEQ applies the EQ predicate on the "payment_method" field.
func PaymentMethodEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentMethod, v))
}

// PaymentMethodNEQ applies the NEQ predicate on the "payment_method" field.
func PaymentMethodNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldPaymentMethod, v))
}

// PaymentMethodIn applies the In predicate on the "payment_method" field.
func PaymentMethodIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldPaymentMethod, vs...))
}

// PaymentMethodNotIn applies the NotIn predicate on the "payment_method" field.
func PaymentMethodNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldPaymentMethod, vs...))
}

// PaymentMethodGT applies the GT predicate on the "payment_method" field.
func PaymentMethodGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldPaymentMethod, v))
}

// PaymentMethodGTE applies the GTE predicate on the "payment_method" field.
func PaymentMethodGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldPaymentMethod, v))
}

// PaymentMethodLT applies the LT predicate on the "payment_method" field.
func PaymentMethodLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldPaymentMethod, v))
}

// PaymentMethodLTE applies the LTE predicate on the "payment_method" field.
func PaymentMethodLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldPaymentMethod, v))
}

// PaymentMethodContains applies the Contains predicate on the "payment_method" field.
func PaymentMethodContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldPaymentMethod, v))
}

// PaymentMethodHasPrefix applies the HasPrefix predicate on the "payment_method" field.
func PaymentMethodHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldPaymentMethod, v))
}

// PaymentMethodHasSuffix applies the HasSuffix predicate on the "payment_method" field.
func PaymentMethodHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldPaymentMethod, v))
}

// PaymentMethodEqualFold applies the EqualFold predicate on the "payment_method" field.
func PaymentMethodEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldPaymentMethod, v))
}

// PaymentMethodContainsFold applies the ContainsFold predicate on the "payment_method" field.
func PaymentMethodContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldPaymentMethod, v))
}

// PaymentStatusEQ applies the EQ predicate on the "payment_status" field.
func PaymentStatusEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentStatus, v))
}

// PaymentStatusNEQ applies the NEQ predicate on the "payment_status" field.
func PaymentStatusNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldPaymentStatus, v))
}

// PaymentStatusIn applies the In predicate on the "payment_status" field.
func PaymentStatusIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldPaymentStatus, vs...))
}

// PaymentStatusNotIn applies the NotIn predicate on the "payment_status" field.
func PaymentStatusNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldPaymentStatus, vs...))
}

// PaymentStatusGT applies the GT predicate on the "payment_status" field.
func PaymentStatusGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldPaymentStatus, v))
}

// PaymentStatusGTE applies the GTE predicate on the "payment_status" field.
func PaymentStatusGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldPaymentStatus, v))
}

// PaymentStatusLT applies the LT predicate on the "payment_status" field.
func PaymentStatusLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldPaymentStatus, v))
}

// PaymentStatusLTE applies the LTE predicate on the "payment_status" field.
func PaymentStatusLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldPaymentStatus, v))
}

// PaymentStatusContains applies the Contains predicate on the "payment_status" field.
func PaymentStatusContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldPaymentStatus, v))
}

// PaymentStatusHasPrefix applies the HasPrefix predicate on the "payment_status" field.
func PaymentStatusHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldPaymentStatus, v))
}

// PaymentStatusHasSuffix applies the HasSuffix predicate on the "payment_status" field.
func PaymentStatusHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldPaymentStatus, v))
}

// PaymentStatusEqualFold applies the EqualFold predicate on the "payment_status" field.
func PaymentStatusEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldPaymentStatus, v))
}

// PaymentStatusContainsFold applies the ContainsFold predicate on the "payment_status" field.
func PaymentStatusContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldPaymentStatus, v))
}

// PaymentInfoEQ applies the EQ predicate on the "payment_info" field.
func PaymentInfoEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentInfo, v))
}

// PaymentInfoNEQ applies the NEQ predicate on the "payment_info" field.
func PaymentInfoNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldPaymentInfo, v))
}

// PaymentInfoIn applies the In predicate on the "payment_info" field.
func PaymentInfoIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldPaymentInfo, vs...))
}

// PaymentInfoNotIn applies the NotIn predicate on the "payment_info" field.
func PaymentInfoNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldPaymentInfo, vs...))
}

// PaymentInfoGT applies the GT predicate on the "payment_info" field.
func PaymentInfoGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldPaymentInfo, v))
}

// PaymentInfoGTE applies the GTE predicate on the "payment_info" field.
func PaymentInfoGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldPaymentInfo, v))
}

// PaymentInfoLT applies the LT predicate on the "payment_info" field.
func PaymentInfoLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldPaymentInfo, v))
}

// PaymentInfoLTE applies the LTE predicate on the "payment_info" field.
func PaymentInfoLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldPaymentInfo, v))
}

// PaymentInfoContains applies the Contains predicate on the "payment_info" field.
func PaymentInfoContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldPaymentInfo, v))
}

// PaymentInfoHasPrefix applies the HasPrefix predicate on the "payment_info" field.
func PaymentInfoHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldPaymentInfo, v))
}

// PaymentInfoHasSuffix applies the HasSuffix predicate on the "payment_info" field.
func PaymentInfoHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldPaymentInfo, v))
}

// PaymentInfoIsNil applies the IsNil predicate on the "payment_info" field.
func PaymentInfoIsNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIsNull(FieldPaymentInfo))
}

// PaymentInfoNotNil applies the NotNil predicate on the "payment_info" field.
func PaymentInfoNotNil() predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotNull(FieldPaymentInfo))
}

// PaymentInfoEqualFold applies the EqualFold predicate on the "payment_info" field.
func PaymentInfoEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldPaymentInfo, v))
}

// PaymentInfoContainsFold applies the ContainsFold predicate on the "payment_info" field.
func PaymentInfoContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldPaymentInfo, v))
}

// PaymentKeyEQ applies the EQ predicate on the "payment_key" field.
func PaymentKeyEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEQ(FieldPaymentKey, v))
}

// PaymentKeyNEQ applies the NEQ predicate on the "payment_key" field.
func PaymentKeyNEQ(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNEQ(FieldPaymentKey, v))
}

// PaymentKeyIn applies the In predicate on the "payment_key" field.
func PaymentKeyIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldIn(FieldPaymentKey, vs...))
}

// PaymentKeyNotIn applies the NotIn predicate on the "payment_key" field.
func PaymentKeyNotIn(vs ...string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldNotIn(FieldPaymentKey, vs...))
}

// PaymentKeyGT applies the GT predicate on the "payment_key" field.
func PaymentKeyGT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGT(FieldPaymentKey, v))
}

// PaymentKeyGTE applies the GTE predicate on the "payment_key" field.
func PaymentKeyGTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldGTE(FieldPaymentKey, v))
}

// PaymentKeyLT applies the LT predicate on the "payment_key" field.
func PaymentKeyLT(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLT(FieldPaymentKey, v))
}

// PaymentKeyLTE applies the LTE predicate on the "payment_key" field.
func PaymentKeyLTE(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldLTE(FieldPaymentKey, v))
}

// PaymentKeyContains applies the Contains predicate on the "payment_key" field.
func PaymentKeyContains(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContains(FieldPaymentKey, v))
}

// PaymentKeyHasPrefix applies the HasPrefix predicate on the "payment_key" field.
func PaymentKeyHasPrefix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasPrefix(FieldPaymentKey, v))
}

// PaymentKeyHasSuffix applies the HasSuffix predicate on the "payment_key" field.
func PaymentKeyHasSuffix(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldHasSuffix(FieldPaymentKey, v))
}

// PaymentKeyEqualFold applies the EqualFold predicate on the "payment_key" field.
func PaymentKeyEqualFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldEqualFold(FieldPaymentKey, v))
}

// PaymentKeyContainsFold applies the ContainsFold predicate on the "payment_key" field.
func PaymentKeyContainsFold(v string) predicate.OrderHistory {
	return predicate.OrderHistory(sql.FieldContainsFold(FieldPaymentKey, v))
}

// HasUser applies the HasEdge predicate on the "user" edge.
func HasUser() predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UserTable, UserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserWith applies the HasEdge predicate on the "user" edge with a given conditions (other predicates).
func HasUserWith(preds ...predicate.User) predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := newUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasUserAddre applies the HasEdge predicate on the "user_addre" edge.
func HasUserAddre() predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UserAddreTable, UserAddreColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserAddreWith applies the HasEdge predicate on the "user_addre" edge with a given conditions (other predicates).
func HasUserAddreWith(preds ...predicate.UserAddress) predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := newUserAddreStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOrderRows applies the HasEdge predicate on the "order_rows" edge.
func HasOrderRows() predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, OrderRowsTable, OrderRowsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrderRowsWith applies the HasEdge predicate on the "order_rows" edge with a given conditions (other predicates).
func HasOrderRowsWith(preds ...predicate.OrderRow) predicate.OrderHistory {
	return predicate.OrderHistory(func(s *sql.Selector) {
		step := newOrderRowsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderHistory) predicate.OrderHistory {
	return predicate.OrderHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderHistory) predicate.OrderHistory {
	return predicate.OrderHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderHistory) predicate.OrderHistory {
	return predicate.OrderHistory(sql.NotPredicates(p))
}
